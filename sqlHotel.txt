CREATE DATABASE Hotel;
USE Hotel;
DROP Database Hotel;
DROP TABLE IF EXISTS reservation;
CREATE TABLE room(
room_type_id int AUTO_INCREMENT NOT NULL,
room_name VARCHAR(50) NOT NULL CHECK(room_name !=''),
room_capacity INT NOT NULL default 10,
price INT NOT NULL,
PRIMARY KEY (room_type_id)
);
INSERT INTO room (room_name, price) VALUES
('Luxury Double Room', 1500),
('Luxury Single Room', 1000),
('Deluxe Double Room',3000),
('Deluxe Single Room', 2000);

CREATE TABLE roomNumber(
room_nmbr int AUTO_INCREMENT NOT NULL,
room_type_id int not null,
foreign key (room_type_id) references room(room_type_id),
PRIMARY KEY (room_nmbr)
);
INSERT INTO roomnumber (room_type_id, room_nmbr) VALUES
(1,1),(1,2),(1,3),(1,4),(1,5), 
(2,6),(2,7),(2,8),(2,9),(2,10), 
(3,11),(3,12),(3,13),(3,14),(3,15),
(4,16),(4,17),(4,18),(4,19),(4,20);

CREATE TABLE customer(
customer_id int AUTO_INCREMENT NOT NULL,
firstName VARCHAR(50) NOT NULL CHECK(firstName !=''),
lastName VARCHAR(50) NOT NULL CHECK(lastName !=''),
telephone VARCHAR(50) NOT NULL CHECK(telephone !=''),
userName VARCHAR(50) NOT NULL CHECK(userName !=''),
password VARCHAR(50) NOT NULL CHECK(password !=''),
PRIMARY KEY (customer_id)
);
INSERT INTO customer (firstName, lastName,telephone,userName,password) VALUES
('test2','5','0811390','5','hej1'),
('test','1','0811390','1','hej'),
('hej','h√•','0811390','hasse','hej'),
('Jacob','Bolghari','08218390','jabo08','hej123'),('Hasse','Hansson','0811390','hasse','hej');

SELECT * from customer;
SELECT * from roomnumber;

SELECT * from room 
LEFT join roomnumber ON roomnumber.room_type_id = room.room_type_id
LEFT join reservation ON reservation.room_nmbr = roomnumber.room_nmbr
LEFT join customer ON customer.customer_id = reservation.customer_id;


CREATE TABLE reservation(
reservation_id int AUTO_INCREMENT NOT NULL,
customer_id int not null,
room_nmbr INT NOT NULL,
amount_days INT NOT NULL default 1, 
check_in DATETIME,
check_out DATETIME default NULL,
booked boolean default true,
foreign key (customer_id) references customer(customer_id),
foreign key (room_nmbr) references roomNumber(room_nmbr),
PRIMARY KEY (reservation_id)
);

INSERT INTO reservation (customer_id, room_nmbr,amount_days,check_in) VALUES
(1,2,5,CURRENT_timestamp),(2,5,1,CURRENT_timestamp);


CREATE TABLE bought(
buy_id int AUTO_INCREMENT NOT NULL,
item_id int not null,
amount INT NOT NULL default 1, 
customer_id INT NOT NULL,
foreign key (item_id) references items(item_id),
foreign key (customer_id) references customer(customer_id),
PRIMARY KEY (buy_id)
);
INSERT INTO bought (item_id, amount, customer_id) VALUES
(1,1,1),(1,2,1),(3,5,1);


DROP TABLE IF EXISTS items;

CREATE TABLE items(
item_id int AUTO_INCREMENT NOT NULL,
item  VARCHAR(50) NOT NULL CHECK(item !=''),
item_stock INT NOT NULL,
item_price INT NOT NULL,
PRIMARY KEY (item_id)
);
INSERT INTO items (item, item_stock, item_price) VALUES
('Pasta',10,150),('Noodles',10,100),('Drink',10,30),('Sandwich',10,130);

select * from items
LEFT JOIN bought ON bought.item_id = items.item_id;

SELECT * from room 
LEFT join roomnumber ON roomnumber.room_type_id = room.room_type_id
LEFT join reservation ON reservation.room_nmbr = roomnumber.room_nmbr
LEFT join customer ON customer.customer_id = reservation.customer_id;

Create VIEW reservationBooked AS
SELECT room.room_name, roomNumber.room_nmbr, reservation.check_in, reservation.customer_id, reservation.booked
FROM room
LEFT join roomnumber ON roomnumber.room_type_id = room.room_type_id
LEFT join reservation ON reservation.room_nmbr = roomnumber.room_nmbr
LEFT join customer ON customer.customer_id = reservation.customer_id
WHERE reservation.booked = true;

dROP View reservationNotBooked;
Create VIEW reservationNotBooked AS
SELECT room.room_name, roomNumber.room_nmbr,reservation.booked
FROM room
LEFT join roomnumber ON roomnumber.room_type_id = room.room_type_id
LEFT join reservation ON reservation.room_nmbr = roomnumber.room_nmbr
LEFT join customer ON customer.customer_id = reservation.customer_id
WHERE reservation.booked is not true;

DRop view Allrooms;
Create VIEW allRooms AS
SELECT room.room_name, roomNumber.room_nmbr,reservation.booked, customer.customer_id
FROM room
LEFT join roomnumber ON roomnumber.room_type_id = room.room_type_id
LEFT join reservation ON reservation.room_nmbr = roomnumber.room_nmbr
LEFT join customer ON customer.customer_id = reservation.customer_id
-- WHERE booked IS NOT true;
ORDER BY booked;
